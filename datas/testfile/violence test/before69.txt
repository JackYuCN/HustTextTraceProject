１引言
随着全球信息化的不断推进以及互联网的高速发展，数据作为重要的生产因素已经渗透到各个领域。人们对海量数
据的挖掘和运用，标志着大数据时代的到来。大数据平台中的文件可能包含用户隐私、敏感数据、商业机密等信息，如果文件被恶意用户窃取后传播到公开网络或平台，则会暴露用户隐私，泄露商业机密，引起版权纠纷，从而造成严重后果，因此通过对平台中的文件进行隐私保护并保证文件泄露后的可
追溯性成为研究的焦点。
２０１０年，ＡｐａｃｈｅＨａｄｏｏｐ组织将大数据定义为：“普通的计算机软件无法在可接受的时间范围内捕捉、管理、处理规模
庞大的数据集。”大数据的常见特点包括：巨大的数据体量（Ｖｏｌｕｍｅ）、繁多的数据类型（Ｖａｒｉｅｔｙ）、快速的数据处理（Ｖｅ－ｌｏｃｉｔｙ）和超低的价值密度（Ｖａｌｕｅ）。其中，繁多的数据类型是
指，相比易于存储的结构化数据，大数据平台中的非结构化数据和半结构化数据（如文本、图像、多媒体等信息）的占比越来越大。
随着大数据技术的不断发展，许多传统的信息安全技术受到了挑战。在大量的数据产生、收集、存储和分析的过程中，既会涉及一些传统的安全问题，也会涉及一些新的安全问题，并且这两类问题会因数据规模、处理过程、安全要求等因素而被不断放大。大量事实表明，若大数据未被妥善处理，则会对用户的隐私造成极大的侵害。依据传统安全策略，数据经过匿名化处理后就可以被公开发布了。但在实际的互联网应用中，用户数据的收集、存储、管理和使用等均缺乏规范标准，未能得到有效监督，仅靠企业的自律是不够的，用户对自
己隐私信息的用途无从得知［１］。
为了解决数据的隐私保护和溯源追踪问题，数字水印（ＤｉｇｉｔａｌＷａｔｅｒｍａｒｋｉｎｇ）作为一种重要的技术手段，一直以来
被学术界和工业界广泛研究和使用。数据水印技术是将一些标识信息（即数字水印）直接嵌入数字载体（包括多媒体、文档、软件等）中或是间接表示（修改特定区域的结构），且不影响原载体的使用价值，也不容易被探知和再次修改。数字水印是保护信息安全、实现防伪溯源和版权保护的有效方法，是信息隐藏技术研究领域的重要分支。
当前，数字水印的研究大多集中在图像数据、音频数据、视频数据，对文本水印的研究相对较少。而大数据平台中的很大一部分数据是由文本形式存储的，如日志文件、交易记录、推荐记录等，因此，大数据环境下的文本水印方案引起了越来越广泛的关注，成为了信息安全的热门研究领域。
在大数据平台和大数据计算中，大量的数据为纯文本数据，而在纯文本中嵌入水印较为困难，这主要是因为纯文本有其特殊性。
（１）广义的文本是由内容和格式构成的，由于对文档内容的表现方式不同，因此文本文档的格式也不尽相同，纯文本有ＴＸＴ和ＣＳＶ等多种格式。
（２）各种格式的文件通常可以互相转换，甚至可以直接抽取文件中的纯文本内容，这样原来嵌入在格式中的水印信息便荡然无存了。（３）ＷＯＲＤ和ＰＤＦ等富文本由内容和结构组成，可以将水印嵌入结构中；而纯文本没有文档结构，仅由字符组成，每个字符都有固定的编码，没有可以嵌入水印信息的多余空间。
（４）图像、音频、视频对象中存在大量的冗余位，在不引起知觉变化的前提下可以将冗余位删除或者进行任意的修改替
换，水印可以隐藏其中。而对于文本，需要结合文本内容进行删除或修改才不会改变文章原意。
针对大数据纯文本的上述特点，本文提出了一种基于正交编码的大数据纯文本水印方法。该方法通过在行尾嵌入不可见字符及改变行序的方法，将水印嵌入纯文本中，其具有不依赖原始记录的排列顺序，所需的水印空间较小，适用于水印空间较小的纯文本数据等优点，同时正交编码方法兼顾了水印的隐蔽性和健壮性。基于Ｓｐａｒｋ平台实现的本文系统，满
足大数据性能需求和分布式处理要求。
２相关研究
当前大数据安全面临的挑战性问题主要有大数据隐私保护和数据泄露防护等。针对上述安全挑战，产生了大数据安
全关键技术，数字水印技术是其中一个重要的研究方向。
近年来，数字水印技术研究取得了很大的进展，典型的数字水印技术主要包括空域算法、频域算法、压缩域算法等。这些算法主要针对图像数据、音频数据、视频数据，针对文本的数字水印算法相对较少。目前常用的文本水印技术主要包括以下几类。
（１）基于文档结构的文本水印方法。这类算法主要适用于具备设置文本排版格式功能的文档，如ＷＯＲＤ，ＰＰＴ和ＰＤＦ等。Ｂｒａｓｓｉ等［２－３］提出了３种著名的文本水印编码技术，通过文档自身的特点进行文档结构微调编码，包括文本的行间距编码、字间距编码和特征编码，从而实现水印信息的嵌入。文献［４］提出通过改变ＷＯＲＤ中字体颜色的ＲＧＢ分量低位数值来嵌入水印。除此之外，还可以改变文本字体或字符流形来嵌入水印信息［５］。通过这类方法嵌入的水印很难用肉眼发现，并且嵌入空间较大，但是针对文本的部分拷贝或修改可能致使水印信息不完整，无格式拷贝或格式修改将会导致水印完全被去除［６］。
（２）基于自然语言的文本水印方法。语言存在多种表述方式，通过自然语言处理技术，可以在不改变原文意思的情况下，对部分文本实施等价信息替换和语序修改等操作，从而实现水印信息的隐藏［７］。目前，自然语言文本数字水印方法主要有基于句法结构和基于语义两类［８－９］。文献［１０］和文献［１１］分别是基于句法结构和基于语义的典型水印方法。此类方法具有极高的隐藏性，不依赖文本格式和编码，虽然最新的技术已经可以还原原文［１１］，但实现过程极为复杂。此外，文本的语言多种多样，包括英文、汉语、阿拉伯语等，目前的许多文本水印算法都是针对英文或汉语的特有语法设计而生，不具有语言的普适性，而适用于任何语言文本的数字水印方法的研究还尚未展开［１２］。
（３）不可见编码算法。不可见编码可细分为不可见字符编码、附加空格编码等方案，适用于非格式化文本，即纯文本。不可见字符编码通过在文本中插入不可打印的ＡＳＣＩＩ字符
或者不可见Ｕｎｉｃｏｄｅ控制字符等来存储水印信息。文献［１３－１４］提出了在网页文本中嵌入零宽度控制字符来嵌入水印信息。张震宇等［１５］在其基础上提出在文本句号前嵌入不可见Ｕｎｉｃｏｄｅ控制字符的方法，该方法适用于任意Ｕｎｉｃｏｄｅ编码格式的文本。附加空格编码算法一般将信息编码隐藏在字处理系统的断行处，行尾或字间是否有空格和制表符在视觉上难以察觉［１６－１７］，在提取时可通过不可见编码的有无、种类及数目进行解码。文献［１８］通过改变空格的字号及上下标属性来表示二进制序列，从而将水印嵌入ＷＯＲＤ文档中。
现有的数字水印方案能够为大数据提供可信性保护，但大数据平台的分布式数据处理机制，使得在对大数据文本文件进行处理后无法保证数据顺序与原有顺序一致。目前已有的水印嵌入与提取方法严格依赖原始数据的记录顺序，不适用于大数据平台数据的水印处理，同时削弱了水印的隐蔽性。与数据顺序无关的水印方法需要在水印记录中添加指示信息，增加了水印容量开销，不适用于冗余空间有限的纯文本数据。因此，满足数据量巨大的水印方案还需进一步研究与探讨。
本文提出的文本水印方法，针对大数据环境下的大批量纯文本文件进行水印嵌入，嵌入方法不依赖于原始记录的行序，适用于大数据水印处理，且不在水印记录中添加指示信息，一定程度地减小了水印容量。
３基于正交编码的大数据纯文本水印方法
纯文本是大数据平台存储和计算中使用得最广泛的数据类型，常见的有以ｔｘｔ和ｃｓｖ为后缀的文件以及无后缀的ｌｏｇ
文件等，纯文本之间可以相互转换。其中，逗号分隔值（Ｃｏｍ－ｍａ－ＳｅｐａｒａｔｅｄＶａｌｕｅｓ，ＣＳＶ）文件以纯文本形式存储表格数据（数字和文本）。ＣＳＶ文件示意图如图１所示，其由任意数目
的记录组成，记录间以某种换行符分隔；每条记录由字段组成，字段间的分隔符是其他字符或字符串，最常见的是逗号。通常，所有记录都有完全相同的字段序列。ＣＳＶ文件由于自身的内容不依赖于行序，符合大数据平台的分布式数据处理机制，因此是一类常见的大数据纯文本格式。本文以ＣＳＶ文件为例来分析介绍水印算法。图１ＣＳＶ文件格式样例
Ｆｉｇ．１ＳａｍｐｌｅｆｏｒｍａｔｏｆＣＳＶｆｉｌｅ
３．１基于正交编码的水印方法模型
本文针对大数据平台纯文本文件的无序性，提出了一种基于正交编码的大数据纯文本水印方法。正交编码是指本文采用的两种水印嵌入和提取方法（基于行散列值和基于行序置换的水印方法）是相互正交的。其中，基于行散列值的水印嵌入方法在纯文本文件的文本行末嵌入不依赖于行序的水印
段，相当于添加了一列内容，类比为对列的改变；基于行序置换的水印嵌入方法的结果为改变行序。这两种方法是解耦合的，不会相互影响，即两种方法相互正交，称为正交编码方法。本文的水印方法模型可以使用传统水印模型表示，定义六元组（ＸＳ，ＷＳ，ＫＳ，Ｇ，Ｅ，Ｄ），其中，ＸＳ代表所要保护的纯文本文件ＸＰ的集合，ＷＳ代表所有可能水印信号Ｗ的集合，ＫＳ是水印密钥Ｋ的集合，Ｇ表示水印生成算法，Ｅ表示水印嵌入算法，Ｄ表示水印提取算法。
Ｇ∶Ｗ＝Ｇ（Ｉ，Ｋ）（１）
式（１）表示水印生成算法Ｇ。将潜在泄密者即下载文件的人提供的个人信息、系统自动生成的时间戳信息串联成固定长度的明文字符串Ｉ，并采用ＡＳＣＩＩ编码或Ｕｎｉｃｏｄｅ编码对该明文字符串进行编码后生成由０和１构成的二进制水印字符串。
Ｗ＝｛ｗ（ｋ）｜ｗ（ｋ）∈Ｂ，ｋ∈Ｗｄ｝（２）
其中，Ｗｄ表示维数为ｄ的水印信号域，水印信号可以是二值形式Ｂ＝｛０，１｝，或Ｂ＝｛－１，１｝，也可以是高斯噪声形式。本文算法采用Ｂ＝｛０，１｝的形式。
Ｅ：ＸＳ×ＷＳ→ＸＳ，ＸＰｗ＝Ｅ（ＸＰ０，Ｗ）（３）
其中，ＸＰ０代表原始的数字产品，ＸＰｗ代表嵌入水印后得到的数字产品。
式（３）表示将生成的二进制水印信号Ｗ嵌入纯文本文件ＸＰ０中的嵌入算法Ｅ，水印嵌入模型如图２所示。本文采用
正交编码方法实现水印嵌入，基于行散列值的水印嵌入方法在文本行末嵌入对应不可见水印段，基于行序置换的水印嵌入方法，根据随机数生成器生成的伪随机数选取起始行号进行行置换，从而完成水印嵌入。３．２核心算法设计
本文采用正交编码方法实现水印嵌入。基于行散列值的水印嵌入方法，先将生成的二进制水印字符串按照每行固定嵌入的水印长度等分，再对载体文件中每行固定长度的内容进行哈希和模运算，将所得结果作为水印序列号信息，采用不可见字符代替二进制水印流，在每行末尾嵌入不可见水印字符串；基于行序置换的水印嵌入方法，根据随机数生成器生成的伪随机数选取起始行号进行行置换，使得行的散列值代表起始标志位、二进制水印编码值和结束标志位，以此来完成水印嵌入。水印嵌入的具体步骤如下：
步骤１将潜在泄密者即下载文件的用户的个人信息以及系统自动生成的当前时间戳信息串联成固定长度的明文字
符串，对该明文字符串进行ＡＥＳ对称加密以及ＢＡＳＥ６４编码，将生成的字符串转换为由０和１构成的二进制水印字符串ＷＭ。
步骤２将水印容量等分为Ｋ份，计算待嵌入水印份数Ｋ＝Ｌｗｍ／ｌ，其中Ｌｗｍ为二进制水印字符串长度，ｌ为每行嵌入
的固定水印长度，定义可变参数ｎ为水印的冗余度，则水印总容量Ｎ＝Ｌｗｍ＊ｎ。
步骤３逐行读取原始文件，计算每行固定位置文本内容的ＭＤ５值ｈＭＤ５，利用该行内容的ＭＤ５值对水印份数Ｋ进
行取模运算，得到结果值ｋ＝ｈＭＤ５％Ｋ。
步骤４将第ｋ份二进制水印串ＷＭｋ按照式（５）所示的规则映射为不可见字符串，并将不可见字符串嵌入该行，回到
步骤３继续读取下一行，直至整个文件读取完成。１８．ｉ＜－ｒａｎｄｏｍ（０，ｒｏｗ－２ｍ－Ｎ－１）１９．ｍａｋｅｅａｃｈｖａｌｕｅｏｆＨＡＳＨ２ｏｆｌｉｎｅｉｔｏｉ＋ｍｅｑｕａｌ１２０．ｍａｋｅｅａｃｈｖａｌｕｅｏｆＨＡＳＨ２ｏｆｌｉｎｅｉ＋ｍ＋１ｔｏｉ＋ｍ＋Ｎｅｑｕａｌｗｍ２１．ｍａｋｅｅａｃｈｖａｌｕｅｏｆＨＡＳＨ２ｏｆｌｉｎｅｉ＋ｍ＋Ｎ＋１ｔｏｉ＋２ｍ＋Ｎ＋
１ｅｑｕａｌ０２２．ｗｍ＿ｆｉｌｅ．ｗｒｉｔｅｌｉｎｅｓ（ｌｉｎｅ）
２３．ｒｅｔｕｒｎｗｍ＿ｆｉｌｅ２４．ｅｎｄｆｕｎｃｔｉｏｎ２５．ｆｕｎｃｔｉｏｎｍａｉｎ（）
２６．ｗｍ＜－Ｅｎｃｏｄｅ（ｉｎｆ）
２７．ＲｏｗＳｗａｐ（ＲｏｗＨａｓｈ（ｆｉｌｅ，ｗｍ），ｗｍ）２８．ｅｎｄｆｕｎｃｔｉｏｎ
水印提取过程为嵌入的逆过程。首先，通过基于行序置换的水印提取方法计算纯文本文件中每行的散列值，当检测到起始标志位时开始记录计算后的散列值，直到检测到结束标志位时停止，将记录下的散列值作为待比较的二进制字符串。通过基于行散列值的水印提取方法，将载体文件中每行固定长度的内容进行哈希和模运算，将得到的结果值作为水印序列号信息，将行末的不可见字符转换为二进制字符，统计各段水印出现的次数，将次数最多的每段水印排序并合并为待比较的二进制字符串。将两串二进制序列进行比较，采用对称密码算法对上述二进制水印字符串进行解密，将解密后的明文字符串进行反编码后得到明文水印要素信息，该信息包括泄密者的个人信息，以及嵌入水印时的时间戳信息。水印提取的具体步骤如下：
步骤１逐行读入文本文件内容，如果检测到连续ｍ行ＨＡＳＨ２的值为１，则从下一行开始将ＨＡＳＨ２的值记录下来，直到检测到连续ｍ行ＨＡＳＨ２的值为０时停止检
测，将记录下的二进制字符串记为ｗａｔｅｒｍａｒｋ１。
步骤２在逐行读入文本文件内容的同时，检测行末是否存在不可见字符，若存在则将该行的文本内容部分和末尾的不可见水印字符部分分割，对该行文本内容部分的固定位置计算ＭＤ５值ｈＭＤ５，计算ｋ＝ｈＭＤ５％Ｋ，其中Ｋ＝Ｌｗｍ／ｌ，Ｌｗｍ
为二进制水印字符串长度，ｌ为每行嵌入的固定水印长度。将本行的不可见水印字符部分转换为二进制串，并将其作为第ｋ份水印存储，直至整个文件读取完成。
步骤３统计第ｋ份水印中各个字符串出现的次数，将出现次数最多的字符串作为该份水印记录下来，按顺序对每份水印进行排序并组合，使其成为完整的二进制水印字符串，记为ｗａｔｅｒｍａｒｋ２。
步骤４对比ｗａｔｅｒｍａｒｋ１与ｗａｔｅｒｍａｒｋ２，若两者相同且长度为Ｌｗｍ，则将ｗａｔｅｒｍａｒｋ１输出；若两者不同，则将长度为（２）对ＲＤＤ的每个键值对进行处理，执行加水印或者提取水印操作，得到键为文件名、值为处理结果的ＲＤＤ。
（３）使用ｓａｖｅＡｓＨａｄｏｏｐＦｉｌｅ接口，保存ＲＤＤ到ＨＤＦＳ中，重写ＯｕｔｐｕｔＦｏｒｍａｔ，键为文件名，输出时只输出其值。
３．４系统架构
基于本文方法，设计并实现了一个大数据纯文本水印系统，系统架构如图４所示，水印嵌入模块和水印提取模块基于Ｓｐａｒｋ分布式处理平台开发。其中，水印嵌入模块包括水印
生成单元和水印嵌入单元。水印生成单元主要进行水印信息的预处理工作，将水印信息串转换为二进制水印字符串；水印嵌入单元利用基于正交编码的水印嵌入方法将二进制水印字
符串嵌入到原始文件中。水印提取模块包括水印提取单元和水印恢复单元。其中，水印提取单元是水印嵌入模块中的水印嵌入单元的逆过程，利用基于正交编码的水印提取方法将嵌入文件的二进制水印字符串提取出来；水印恢复单元主要将二进制水印字符串转换为水印信息串，得到水印文件的明文信息。大数据纯文本文件存储在ＨＤＦＳ分布式文件系统中，水印信息数据库存储待嵌入水印信息及订单信息等。本文开发了相应的系统界面，供用户进行水印嵌入、提取及文件的上传、下载等操作。图４系统架构
Ｆｉｇ．４Ｓｙｓｔｅｍａｒｃｈｉｔｅｃｔｕｒｅ
４实验与分析
数字水印技术应该满足水印的固有特性，例如鲁棒性、隐蔽性、水印容量和算法性能等［１９－２０］，因此按照水印的固有特
性进行水印技术评估。本文的水印方法测试主要分为以下４个部分：１）水印方法性能测试，包括水印容量测试和针对多个文件进行大规模批量水印处理的测试；２）隐蔽性测试，针对嵌入水印前后的文件视觉效果进行对比分析；３）鲁棒性测试，针对嵌入水印后的文件进行删减、添加、拷贝、替换攻击，检测提取水印的正确性；４）对比测试，将本文算法与３种文本水印算法进行对比分析，记录测试指标，包括处理时间、水印提取成功率。
４．１实验环境
（１）硬件与集群配置
硬件配置为Ｅ５－２６０３ｖ２＠１．８０ＧＨｚＣＰＵ、８ＧＢ内存。Ｓｐａｒｋ集群由４个节点组成，即１个主节点和３个从节点。
（２）软件配置
实验环境的软件配置如表１所列。